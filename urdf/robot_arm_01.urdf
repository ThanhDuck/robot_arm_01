<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com) 
     Commit Version: 1.6.0-4-g7f85cfe  Build Version: 1.6.7995.38578
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot
  name="robot_arm_01">
  <link
    name="base_link">
    <inertial>
      <origin
        xyz="0.0564924196054146 -1.44043492011914E-06 0.00775181685369958"
        rpy="0 0 0" />
      <mass
        value="1.0611224303635671" />
      <inertia
        ixx="0.000949147493648086"
        ixy="3.30685281440265E-09"
        ixz="3.71372356368858E-07"
        iyy="0.0010057196938717"
        iyz="-4.15339567209004E-11"
        izz="0.00191346803726957" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm_01/meshes/base_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.647058823529412 0.619607843137255 0.588235294117647 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm_01/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>
  <link
    name="right_wheel_link">
    <inertial>
      <origin
        xyz="-1.34379867899881E-06 -6.23203130722949E-06 -1.10965151169096E-06"
        rpy="0 0 0" />
      <mass
        value="0.0535214416968655" />
      <inertia
        ixx="2.19071660369465E-05"
        ixy="9.8742502469194E-09"
        ixz="-2.21236346159322E-11"
        iyy="3.82236488757542E-05"
        iyz="2.83438951001983E-13"
        izz="2.19071683079018E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm_01/meshes/right_wheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.00784313725490196 0.23921568627451 0.823529411764706 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm_01/meshes/right_wheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="right_wheel_joint"
    type="continuous">
    <origin
      xyz="0 -0.098575 0"
      rpy="0 0 0.00060515" />
    <parent
      link="base_link" />
    <child
      link="right_wheel_link" />
    <axis
      xyz="0 1 0" />

    <limit
      effort="30"
      velocity="0.5" />
  </joint>
  <link
    name="left_wheel_link">
    <inertial>
      <origin
        xyz="-1.59210369621299E-06 6.23380796593853E-06 6.92949931584835E-07"
        rpy="0 0 0" />
      <mass
        value="0.0535214416968649" />
      <inertia
        ixx="2.19071548484918E-05"
        ixy="9.87352239794537E-09"
        ixz="1.64937927801485E-11"
        iyy="3.8223648876639E-05"
        iyz="1.55802829764669E-13"
        izz="2.19071794954712E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm_01/meshes/left_wheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.00784313725490196 0.23921568627451 0.823529411764706 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm_01/meshes/left_wheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="left_wheel_joint"
    type="continuous">
    <origin
      xyz="0 0.098575 0"
      rpy="0 0 0.00060515" />
    <parent
      link="base_link" />
    <child
      link="left_wheel_link" />
    <axis
      xyz="0 1 0" />
    <limit
      effort="30"
      velocity="0.5" />
  </joint>
  <link
    name="arm_01_link">
    <inertial>
      <origin
        xyz="8.22111322307251E-06 0.003 0.0272587782193002"
        rpy="0 0 0" />
      <mass
        value="0.102538043838268" />
      <inertia
        ixx="0.000129174353703012"
        ixy="-7.06346068671281E-20"
        ixz="1.23702011042958E-08"
        iyy="0.000106202495979079"
        iyz="-2.32819838484566E-20"
        izz="3.69225200982517E-05" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm_01/meshes/arm_01_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm_01/meshes/arm_01_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="arm_01_joint"
    type="revolute">
    <origin
      xyz="0.081 0 0.0555"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="arm_01_link" />
    <axis
      xyz="0 -1 0" />
    <limit
      lower="-1.5708"
      upper="1.5708"
      effort="30"
      velocity="0.5" />
  </joint>
  <link
    name="arm_02_link">
    <inertial>
      <origin
        xyz="0.048133237264867 0.0029708727483283 2.77555756156289E-17"
        rpy="0 0 0" />
      <mass
        value="0.133331386610855" />
      <inertia
        ixx="6.8965910691227E-05"
        ixy="-1.96552107783491E-07"
        ixz="-2.06885898938365E-20"
        iyy="0.000132392183387768"
        iyz="5.41215227505496E-21"
        izz="0.000185756264289367" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm_01/meshes/arm_02_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.792156862745098 0.819607843137255 0.933333333333333 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm_01/meshes/arm_02_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="arm_02_joint"
    type="revolute">
    <origin
      xyz="0 0 0.11554"
      rpy="0 0 0.00060515" />
    <parent
      link="arm_01_link" />
    <child
      link="arm_02_link" />
    <axis
      xyz="-0.00060515 -1 0" />
    <limit
      lower="-1.5708"
      upper="1.5708"
      effort="30"
      velocity="0.5" />
  </joint>
  <link
    name="free_wheel_link">
    <inertial>
      <origin
        xyz="4.2277292777726E-13 -7.01660951563099E-14 0.00376730047514435"
        rpy="0 0 0" />
      <mass
        value="0.0324598989758372" />
      <inertia
        ixx="2.84121859895983E-06"
        ixy="-8.19446473825657E-21"
        ixz="2.85058883326183E-18"
        iyy="2.22141597744477E-06"
        iyz="2.10457212968406E-17"
        izz="3.53698386737172E-06" />
    </inertial>
    <visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm_01/meshes/free_wheel_link.STL" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.529411764705882 0.549019607843137 0.549019607843137 1" />
      </material>
    </visual>
    <collision>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://robot_arm_01/meshes/free_wheel_link.STL" />
      </geometry>
    </collision>
  </link>
  <joint
    name="free_wheel_joint"
    type="fixed">
    <origin
      xyz="0.213 0 -0.0255"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="free_wheel_link" />
    <axis
      xyz="0 0 0" />
  </joint>


    
    
  <link name="lidar_link">

  <visual>
      <geometry>
        <cylinder length="0.01" radius="0.01"/>
      </geometry>
    </visual>

  </link>

  <joint
    name="lidar_joint"
    type="fixed">
    <origin
      xyz="0.2 0 0.001"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="lidar_link" />
    <axis
      xyz="0 0 0" />
  </joint>


  <link name="imu_link">
  </link>

  <joint
    name="limu_joint"
    type="fixed">
    <origin
      xyz="0.0 0 0.1"
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="imu_link" />
    <axis
      xyz="0 0 0" />
  </joint>

  <link name="camera_link">
   <visual>
      <geometry>
        <box size="0.01 0.02 0.01"/>
      </geometry>
    </visual>
  </link>

  <joint
    name="camera_joint"
    type="fixed">
    <origin
      xyz="0.15 0 0.04" 
      rpy="0 0 0" />
    <parent
      link="base_link" />
    <child
      link="camera_link" />
    <axis
      xyz="0 0 0" />
  </joint>


  <gazebo>
    <plugin name="gazebo_ros_control" 
      filename="libgazebo_ros_control.so">
      <robotNamespace>/robot_arm</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
      <legacyModeNS>true</legacyModeNS>
    </plugin>
  </gazebo>



   <!-- <gazebo reference="right_wheel_link">
    <mu1>0.4</mu1>
    <mu2>0.4</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

  <gazebo reference="left_wheel_link">
    <mu1>0.4</mu1>
    <mu2>0.4</mu2>
    <kp>500000.0</kp>
    <kd>10.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>

 -->


  <gazebo reference="free_wheel_link">
    <mu1>0.1</mu1>
    <mu2>0.1</mu2>
    <kp>500000000.0</kp>
    <kd>1.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>0.1</maxVel>
    <fdir1>1 0 0</fdir1>
    <material>Gazebo/FlatBlack</material>
  </gazebo>


  <gazebo reference="lidar_link">
    <sensor type="ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_laser.so">
        <topicName>/scan</topicName>
        <frameName>lidar_link</frameName>
      </plugin>
    </sensor>
  </gazebo>


  <!-- camera -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
       <visualize>true</visualize>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>480</width>
          <height>240</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>/camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

<gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>10</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>imu</topicName>
        <bodyName>imu_link</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>imu_link</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>


  <gazebo>
    <plugin name="robot_base" filename="libgazebo_ros_diff_drive.so">
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <odometrySource>world</odometrySource>
      <publishOdomTF>true</publishOdomTF>
      <robotBaseFrame>base_link</robotBaseFrame>
      <publishWheelTF>false</publishWheelTF>
      <publishTf>true</publishTf>
      <publishWheelJointState>true</publishWheelJointState>
      <legacyMode>false</legacyMode>
      <updateRate>30</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.160</wheelSeparation>
      <wheelDiameter>0.066</wheelDiameter>
      <wheelAcceleration>1</wheelAcceleration>
      <wheelTorque>50</wheelTorque>
      <rosDebugLevel>na</rosDebugLevel>
    </plugin>
  </gazebo>







<!-- Transmission   -->
  <transmission name="j1">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="arm_01_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="M1">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>

  <transmission name="j2">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="arm_02_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="M2">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>



</robot>